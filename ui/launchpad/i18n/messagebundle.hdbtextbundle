DO_NOT_SHOW=Do not show this again
TITLE=SHINE (SAP HANA Interactive Education)
OK_BUTTON=OK
INTRODUCTION=Introduction
WHATS_NEW=What's New
TILE_HELP_PROMPT=Clicking on each tile will bring up the help for that module.
CHECK_PRE=Check Prerequisites
DG=Data Generator
POWLIST=Purchase Order Worklist
SALES_DASH=Sales Dashboard
SOWLIST=Sales Worklist
USER=User CRUD
HANA_UIS_BLUE=HANA UI Integration Services - Blue Crystal Theme
HANA_UIS_GOLD=HANA UI Integration Services - Gold Reflection Theme
SPATIAL=Spatial Demo
INATOOLKIT=INA Toolkit Demo
SALES_DASH_MOB=Sales Dashboard Mobile
FIORI_LAUNCHPAD=Fiori Launchpad
BUSINESS_SCENARIO=Business Scenario
MAJOR_TABLES=Major database Tables/Views
UI_FOLDER=UI Folder path
PERMISSIONS=Permissions required
CONTINUE=Continue

SHINE_INTRO=SAP HANA Interactive Education, or SHINE, is a demo application that makes it easy to learn how to build native SAP HANA applications. The demo application, delivered with SAP HANA in a special delivery unit(DU), comes complete with sample data and design-time developer objects for the application's database tables, data views, stored procedures, OData, and user interface.
SHINE_WHATS_NEW=<ul><li>Fiori like Launch Pad</li><li>Multiple line item create of Sales Orders</li><li>Delete Sales Order</li><li>Separate Application link for SO Work list</li><li>Log off feature for Purchase and Sales work list</li><li>Time Based Data Generator for PO and SO ( involved xsjs code)</li><li>Free-style search of SalesOrders using INA Toolkit</li></ul>

TILE_DESC_DG=<div>The demo application defines a set of tables, along with a basic set of initial data that comes in a set of CSV files. For example, the sales orders table begins with 1,000 records. </br><ul><li>This application provides the tools for generating additional sales and purchase order records, as well as reloading the master data tables.</li><li>The records can also be distributed over a period of time using the Time based Data Generator</li><li>The complete application data can also be reset using this module.</li><li><font color="red">You can use the application with the initial data, but you must run the data generation tool  to create synonyms for Currency Conversions.</font></li></ul></div>
TILE_DESC_PO=<div>This UI illustrates a comprehensive Purchase Order Worklist which can act as a complete interface for a Purchase Department Head.</br><ul><li>There is a list of Purchase Orders and upon selection of a particular order, the general data and Purchase Order items related to the purchase order are listed in separate tabs.</li><li>He can perform Actions like Delete, Accept or Reject on these Purchase Orders and export the data to excel</li><li>He can perform search for the Purchase Orders based on different attribute like Company Name,Product ID,etc</li></ul></div>
TILE_DESC_SO=<div>This UI illustrates a Sales Order Worklist where you can create and delete Sales Orders.</br><ul><li>The Details tab provides a type of PO Worklist where all the Sales Orders are listed.</li><li>By selecting a Sales Order, you can view its details.</li><li>This tab also provides a feature for creating Sales Orders using XSJS.</li></ul></div>
TILE_DESC_SD=<div>This UI illustrates a comprehensive dashboard concept for a Sales Manager that contains several charts based on the OData models constructed in the demo content.</br><ul><li>The Overview tab contains all the sales specific charts based on Region/Country/Discount per region.</li><li>The Product Reports tab contains charts that provide sales information categorized by product.</li><li>The Details tab provides a type of PO Worklist where all the Sales Orders are listed.</li><li>By selecting a Sales Order, you can view its details.</li><li>This tab also provides a feature for creating Sales Orders using XSJS.</li></ul></div>
TILE_DESC_US=<div>The userCRUD ( Create Read Update Delete) folder contains a simple model and UI demonstrating creation and update of data.</br><ul><li>Here in this screen, a new User record can be created as well as existing records can be updated in the table itself or deleted.</li><li>New records can be created using two methods, first by <b>simple HTTP POST request using OData</b> and second by using the <b>$batch request provided by OData</b> which allows us to create multiple records in a single HTTP request.</li><li>You can perform an update by modifying the First Name, Last Name, and/or Email fields that already exist in the table.</li><li>This UI also showcases how to integrate the custom exits for OData methods.</li></ul></div>
TILE_DESC_UIS_BLUE=<div>SAP HANA UI integration services act as a container for mini web pages. Rather than developing an entire site with dependencies between the various components, you develop small chunks of functions called widgets. Widgets are added in an application site container where they are consumed to build your final web site.</br></br>This UI Shows the Blue Crystal Runtime of the Site.</div>
TILE_DESC_UIS_GOLD=<div>SAP HANA UI integration services act as a container for mini web pages. Rather than developing an entire site with dependencies between the various components, you develop small chunks of functions called widgets. Widgets are added in an application site container where they are consumed to build your final web site.</br></br>This UI Shows the Gold Reflection Runtime of the Site.</div>
TILE_DESC_SPATIAL=<div>This UI illustrates a small demo on how spatial features and analyisis can be integrated with HANA XS applications. In this UI we use the latitude and longitude data from Address table to perform analysis over Sales and Customer data.</div>
TILE_DESC_INATOOLKIT=<div>This UI illustrates a demo on how SAP HANA INA Toolkit and INA Service can be used to create flexible search UI's. In this demo, we can do a free style search on the SalesOrders based on product name and product description.</br><font color="red">To use INA Toolkit you should have the following DU imported<ul><li>HCO_INA_UITOOLKIT.tgz (To be obtained from SAP Service Marketplace)</li><li>HCO_INA_SERVICE.tgz (To be obtained from the server)</li></ul>You will also need to assign this particular role to the user<ul><li>sap.bc.ina.service.v2.userRole::INA_USER</li></ul></font></div>
TILE_DESC_SALES_MOBILE=<div>This Mobile UI illustrates a comprehensive dashboard concept that contains several charts based on the OData model constructed in the demo content. You can see  sales specific charts based on Region/Country/Discount per region and  charts that provide sales information categorized by product.</div>
TILE_DESC_FIORI=<div>SAP Fiori launchpad is the entry point to Fiori apps on mobile or desktop devices.</br>First of all, the launchpad displays various tiles. Tiles are rectangular objects that provide access to applications. Which tiles are displayed on a user’s entry page depends on the user’s role. Depending on the role, the user can choose from a wide choice of ready-to-use tiles from the tile catalog as part of the launchpad personalization.</div>

TILE_BUSI_SCEN_SD=As the Sales head of a company which deals in buying and selling IT equipments all over the world via e-commerce, I would like to have some Sales Analytics (Graphical representation) by which i can figure out the sales per region after orders have been executed. This  would help me in optimizing my sales strategy and enable me to make better sales decisions.
TILE_BUSI_SCEN_SP=As the Sales head of a company which deals in buying and selling IT equipments all over the world via e-commerce, I would like to visualize my Customers on a map. I would also like to select a region on the map and view its Sales data.

TILE_DB_VIEWS_DG=<div>All Master Data Tables , Purchase and Sales tables.</div>
TILE_DB_VIEWS_PO=<ul><li>PO.Header</li><li>PO.Item</li><li>PURCHASE_OVERVIEW</li><ul>
TILE_DB_VIEWS_SO=<ul><li>SO.Header</li><li>SO.Item</li><li>SALES_ORDER_WORKLIST</li><ul>
TILE_DB_VIEWS_SD=<ul><li>SO.Header</li><li>SO.Item</li><li>SALES_ORDER_RANKING</li><li>SALES_YEAR_COMPARISON</li><li>CV_SALES_ORDER_RANKING*</li><ul>
TILE_DB_VIEWS_US=<div>User.Details</div>
TILE_DB_VIEWS_UIS_BLUE=<ul><li>PO.Header</li><li>PO.Item</li><li>PURCHASE_Overview</li><ul>
TILE_DB_VIEWS_UIS_GOLD=<ul><li>PO.Header</li><li>PO.Item</li><li>PURCHASE_Overview</li><ul>
TILE_DB_VIEWS_SPATIAL=<ul><li>MD.Addresses</li><li>MD.BusinessPartner</li><li>SO.Header</li></ul>
TILE_DB_VIEWS_INATOOLKIT=<ul><li>Util.Texts</li><li>SALES_ORDER_WORKLIST</li></ul>
TILE_DB_VIEWS_SALES_MOB=<ul><li>SO.Header</li><li>SO.Item</li><li>SALES_ORDER_RANKING</li><li>SALES_YEAR_COMPARISON</li><li>SALES_ORDER_RANKING*</li></ul>
TILE_DB_VIEWS_FIORI=<div>No specific DB Views or Tables are used</div>

TILE_UI_FOLDER_DG=/sap/hana/democontent/epmNext/admin/ui/
TILE_UI_FOLDER_PO=/sap/hana/democontent/epmNext/ui/poworklist/
TILE_UI_FOLDER_SO=/sap/hana/democontent/epmNext/ui/salesDashboard/
TILE_UI_FOLDER_SD=/sap/hana/democontent/epmNext/ui/salesDashboard/
TILE_UI_FOLDER_US=/sap/hana/democontent/epmNext/ui/userCRUD/
TILE_UI_FOLDER_UIS_BLUE=/sap/hana/democontent/epmNext/ui/uis/site/UISExample/
TILE_UI_FOLDER_UIS_GOLD=/sap/hana/democontent/epmNext/ui/uis/site/UISExample/
TILE_UI_FOLDER_SPATIAL=/sap/hana/democontent/epmNext/spatial/ui
TILE_UI_FOLDER_INATOOLKIT=/sap/hana/democontent/epmNext/fulltextsearch/ui
TILE_UI_FOLDER_SALES_MOB=/sap/hana/democontent/epmNext/ui/salesDashMobile/
TILE_UI_FOLDER_FIORI=/sap/hana/democontent/epmNext/ui/uis/FioriLaunchPad

TILE_PERMS_DG=User should have Admin.Hdbrole to access this Application, Time Data has to be generated.
TILE_PERMS_PO=User should have User.hdbrole,Time Data has to be generated, Create Synonyms should have been executed in Data Generator.
TILE_PERMS_SO=User should have User.hdbrole,Time Data has to be generated, Create Synonyms should have been executed in Data Generator.
TILE_PERMS_SD=User should have User.hdbrole,Time Data has to be generated, Create Synonyms should have been executed in Data Generator.
TILE_PERMS_US=User should have User.hdbrole.
TILE_PERMS_UIS_BLUE=User should have User.hdbrole,Time Data has to be generated, Create Synonyms should have been executed in Data Generator. We need sap.hana.uis.db::SITE_DESIGNER & sap.hana.uis.db::SITE_USER with sap.hana.uis.privileges::AppSiteAccess-All ( Application Privilege) to access the Site. ( these are already added as part of User.Hdbrole)
TILE_PERMS_UIS_GOLD=User should have User.hdbrole,Time Data has to be generated, Create Synonyms should have been executed in Data Generator. We need sap.hana.uis.db::SITE_DESIGNER & sap.hana.uis.db::SITE_USER with sap.hana.uis.privileges::AppSiteAccess-All ( Application Privilege) to access the Site. ( these are already added as part of User.Hdbrole)
TILE_PERMS_SPATIAL=User should have User.hdbrole.
TILE_PERMS_INATOOLKIT=User should have User.hdbrole and sap.bc.ina.service.v2.userRole::INA_USER.
TILE_PERMS_SALES_MOB=User should have User.hdbrole,Time Data has to be generated, Create Synonyms should have been executed in Data Generator.
TILE_PERMS_FIORI=WidgetAccess:FioriShineCatalog and AppSiteAccess:FioriShineLaunchPad

CHECKING_PRE=Checking Prerequisites
PRE_PROMPT=Please check Section 5 of this guide for the complete list of prerequisites.
PDF_LINK=http://help.sap.com/hana/SAP_HANA_Interactive_Education_SHINE_en.pdf
LINK_PROMPT=Getting started guide
USER_ROLE_PRESENT=User role status
ADMIN_ROLE_PRESENT=Admin role status
ANALYTIC_PRIVILEGE=Analytic privileges for models
TIME_DATA_GENERATED=Time data generated
SYNONYM_PRESENT=Synonyms present
CANT_CHECK=Not able to check the prerequisites
INA_TOOLKIT_STATUS=INA Toolkit status
TIME_INFO=<div>Data needs to be loaded into the M_TIME_DIMENSION Time Dimension table in the _SYS_BI Schema. This can be done by opening the Modeler view in the HANA Studio and then selecting Generate Time Data and passing the relevant information to the table. Data should be present at least for year 2012.</div>
SYNONYMS_INFO=<div>Use the Data Generator to generate the synonyms for use in currency conversions.</div>